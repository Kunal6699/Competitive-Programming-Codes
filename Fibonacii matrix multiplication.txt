                                                  //    Om Namah Shivay   //
#include<bits/stdc++.h>
using namespace std;
#define ll           long long
#define rep(i,j,n)   for(ll i=j;i<n;i++)
#define scn(a)       scanf("%lld",&a)
#define scnl(a,b)      scanf("%lld %lld",&a,&b)
#define nl              printf("\n")
#define prnt(a)     printf("%lld",a)
#define tc           ll t; scn(t); while(t--)
#define inp          scn(n); rep(i,0,n) scn(a[i]) 
#define vec          vector<ll>
#define pb           push_back    
#define pairs        pair<ll,ll>
#define F            first
#define S          second
#define UNIQUE(V) (V).erase(unique((V).begin(),(V).end()),(V).end())
#define LCM(x,y) (((x)/gcd((x),(y)))*(y))
#define POPCOUNT __builtin_popcountll
typedef pair < int, int > pii;
typedef pair   <ll,ll > pll;


#define all(v)       v.begin(),v.end()
#define srt(v)       sort(v.begin(),v.end())
#define srtr(v)      sort(v.rbegin(),v.rend())
#define mem(a)       memset(a,0,sizeof(a))
#define im           int main()
#define maxx         1000001
#define inf          LONG_MAX
#define zer          LONG_MIN
#define pq            priority_queue<ll>
#define pqmn       priority_queue<ll,vector<ll>,greater<ll>>
#define oto       for(auto itr=v.begin();itr!=v.end();itr++)
#define otor       for(auto itr=v.rbegin();itr!=v.rend();itr++)

#define fstt         ios_base_sync::with_stdio(0); cin.tie(0); cout.tie(0);
ll mod=1e9+7;

//int knightDir[8][2] = { {-2,1},{-1,2},{1,2},{2,1},{2,-1},{-1,-2},{1,-2},{-2,-1} };
//int dir4[4][2] = {{-1,0},{0,1},{1,0},{0,-1}};
//int dir8[8][2] = {{-1,0},{0,1},{1,0},{0,-1},{-1,-1},{1,1},{1,-1},{-1,1}};

ll n,i,j,ar[maxx],br[maxx],od,ev,p,res2,res1,k;

bool mark[maxx];



void multiply(ll T[3][3], ll M[3][3]) 
{ 
    ll a, b, c, d, e, f, g, h, i; 
    a = (T[0][0]%mod * M[0][0]%mod +  
        T[0][1]%mod * M[1][0]%mod +  
        T[0][2]%mod * M[2][0]%mod)%mod; 
    b = (T[0][0]%mod * M[0][1]%mod +  
        T[0][1]%mod * M[1][1]%mod +  
        T[0][2]%mod * M[2][1]%mod)%mod; 
    c = (T[0][0]%mod * M[0][2]%mod +  
        T[0][1]%mod * M[1][2]%mod +  
        T[0][2]%mod * M[2][2]%mod)%mod; 
    d = (T[1][0]%mod * M[0][0]%mod +  
        T[1][1]%mod * M[1][0]%mod +  
        T[1][2]%mod * M[2][0]%mod)%mod; 
    e = (T[1][0]%mod * M[0][1]%mod +  
        T[1][1]%mod * M[1][1]%mod +  
        T[1][2]%mod * M[2][1]%mod)%mod; 
    f = (T[1][0]%mod * M[0][2]%mod +  
        T[1][1]%mod * M[1][2]%mod +  
        T[1][2]%mod * M[2][2]%mod)%mod; 
    g = (T[2][0]%mod * M[0][0]%mod +  
        T[2][1]%mod * M[1][0]%mod +  
        T[2][2]%mod * M[2][0]%mod)%mod; 
    h = (T[2][0]%mod * M[0][1]%mod +  
        T[2][1]%mod * M[1][1]%mod +  
        T[2][2]%mod * M[2][1]%mod)%mod; 
    i = (T[2][0]%mod * M[0][2]%mod +  
        T[2][1]%mod * M[1][2]%mod +  
        T[2][2]%mod * M[2][2]%mod)%mod; 
    T[0][0] = a; 
    T[0][1] = b; 
    T[0][2] = c; 
    T[1][0] = d; 
    T[1][1] = e; 
    T[1][2] = f; 
    T[2][0] = g; 
    T[2][1] = h; 
    T[2][2] = i; 
} 
  
void power(ll T[3][3], ll n) 
{ 
    
    if (n == 0 || n == 1) 
        return; 
    ll M[3][3] = {{ 1, 1, 0 },  
                   { 1, 0, 0 },  
                   { 0, 1, 0 }}; 
  

    power(T, n / 2); 
  
    
    multiply(T, T); 
    if (n % 2) 
        multiply(T, M); 
} 
ll tribonacci(ll n) 
{ 
    ll T[3][3] = {{ 1, 1, 0 },     // T[N]=1*T[N-1]+1*T[N-2]+0*T[N-3]     GENERAL FORM IS T[N]=A*T[N-1]+B*T[N-2]+C*T[N-3]........
                   { 1, 0, 0 }, 
                   { 0, 1, 0 }}; 
  
    // base condition 
    if (n == 0 || n == 1) 
        return 0; 
    else
        power(T, n - 2); 
  
   
    return T[0][0]%mod; 
} 
  
im
{
    tc
    {
        scn(n);
     rep(i,0,n){
     cout<<tribonacci(i)<<"  ";
     }
     nl;
    }
}