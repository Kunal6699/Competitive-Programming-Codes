#include<bits/stdc++.h>
using namespace std;
#define ll           long long
#define rep(i,j,n)   for(ll i=j;i<n;i++)
#define scn(a)       scanf("%lld",&a)
#define scnl(a,b)      scanf("%lld %lld",&a,&b)
#define nl              printf("\n")
#define prnt(a)     printf("%lld",a)
#define tc           ll t; scn(t); while(t--)
#define inp          scn(n); rep(i,0,n) scn(a[i]) 
#define vec          vector<ll>
#define pb           push_back    
#define pairs        pair<ll,ll>
#define F            first
#define S          second
#define all(v)       v.begin(),v.end()
#define srt(v)       sort(v.begin(),v.end())
#define srtr(v)      sort(v.rbegin(),v.rend())
#define mem(a)       memset(a,0,sizeof(a))
#define im           int main()
#define maxx         200005
#define inf          LONG_MAX
#define zer          LONG_MIN
#define pq            priority_queue<ll>
#define pqmn       priority_queue<ll,vector<ll>,greater<ll>>
#define oto       for(auto itr=v.begin();itr!=v.end();itr++)
#define otor       for(auto itr=v.rbegin();itr!=v.rend();itr++)

#define fstt         ios_base_sync::with_stdio(0); cin.tie(0); cout.tie(0);
ll mod=1e9+7;
ll n,i,j,ar[maxx],mm;

vector<ll> v[maxx];
vector<ll> m[maxx];
pair<ll,ll> pr[maxx];
ll intm[maxx],outtm[maxx],euler[maxx],cnt[maxx],col[maxx],res[maxx];

ll tim=0,ans;
void dfs(ll node,ll par)
{
    tim++;
    intm[node]=tim;
    euler[tim]=node;
    for(auto it:v[node])
    {
        if(it!=par)
        dfs(it,node);    
    }   
    outtm[node]=tim;
}

void calc(ll u,ll* mx)
{
       cnt[col[u]]++;
  if(cnt[col[u]]>*mx)
  {
      *mx=cnt[col[u]];
    ans=col[u];  
  }
   else if(cnt[col[u]]>=*mx)
      ans+=col[u]; 

   
}


 void dfs(ll u,ll par,ll keep)
 {
     ll mx,big,op;
     ans=0;
      op=big=mx=-1;
     for(auto it: v[u])
     {
         if(it!=par)
         {
             ll sz=outtm[it]-intm[it]+1;
             if(sz>op)
             {
                 op=sz;
                 big=it;
             }
         }    
             
     }   
     
     for(auto it: v[u])
     {
         if(it!=par&&it!=big)
         dfs(it,u,0);    
     }
     if(big!=-1){
       dfs(big,u,1);
       mx=pr[big].F;
       ans=pr[big].S;
        
                  
     }
    
 
    calc(u,&mx);       
        
    
    for(auto it:v[u]){
      if(it!=par&&it!=big)
        for(i=intm[it];i<=outtm[it];i++)  
      {
          int kk=euler[i];
          calc(kk,&mx);
          
      } 
    }
    
    if(!keep)
    {
        for(i=intm[u];i<=outtm[u];i++){
            ll aa=euler[i];
        cnt[col[aa]]--;   }
    }                  
   if(keep)
   {
       pr[u].F=mx;
       pr[u].S=ans;
   }
 res[u]=ans;
     
 }




im
{
  scn(n);
  rep(i,1,n+1)
  cin>>col[i];  
  rep(i,0,n-1)
  {
      ll x,y;
      scnl(x,y);
      v[x].pb(y);
      v[y].pb(x);
  }
    dfs(1,-1);
    dfs(1,-1,1);
  rep(i,1,n+1)
  cout<<res[i]<<" ";
  
  
}