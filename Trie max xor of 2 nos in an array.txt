                            //    Om Namah Shivay   //
#include<bits/stdc++.h>
using namespace std;
#define ll           long long
#define rep(i,j,n)   for(ll i=j;i<n;i++)
#define scn(a)       scanf("%lld",&a)
#define scnl(a,b)      scanf("%lld %lld",&a,&b)
#define nl              printf("\n")
#define prnt(a)     printf("%lld",a)
#define tc           ll t; scn(t); while(t--)
#define inp          scn(n); rep(i,0,n) scn(a[i]) 
#define vec          vector<ll>
#define pb           push_back    
#define pairs        pair<ll,ll>
#define F            first
#define S          second
#define UNIQUE(V) (V).erase(unique((V).begin(),(V).end()),(V).end())
#define LCM(x,y) (((x)/gcd((x),(y)))*(y))
#define POPCOUNT __builtin_popcountll
typedef pair < int, int > pii;
typedef pair   <ll,ll > pll;


#define all(v)       v.begin(),v.end()
#define srt(v)       sort(v.begin(),v.end())
#define srtr(v)      sort(v.rbegin(),v.rend())
#define mem(a)       memset(a,0,sizeof(a))
#define im           int main()
#define maxx         10005
#define inf          LONG_MAX
#define zer          LONG_MIN
#define pq            priority_queue<ll>
#define pqmn       priority_queue<ll,vector<ll>,greater<ll>>
#define oto       for(auto itr=v.begin();itr!=v.end();itr++)
#define otor       for(auto itr=v.rbegin();itr!=v.rend();itr++)

#define fstt         ios_base_sync::with_stdio(0); cin.tie(0); cout.tie(0);
ll mod=1e9+7;

//int knightDir[8][2] = { {-2,1},{-1,2},{1,2},{2,1},{2,-1},{-1,-2},{1,-2},{-2,-1} };
//int dir4[4][2] = {{-1,0},{0,1},{1,0},{0,-1}};
//int dir8[8][2] = {{-1,0},{0,1},{1,0},{0,-1},{-1,-1},{1,1},{1,-1},{-1,1}};ll mod=1e9+7;
ll n,i,j,ar[maxx],br[maxx],mn,val;

struct trie
{

    trie* left; trie* right;
};

void insert(trie* root,ll no)
{
    trie* cur=root;
      
    for(i=31;i>=0;i--)
    {
      val=(no>>i)&1;
      if(val==0)
      {
          if(!cur->left)
             cur->left=new trie();
          cur=cur->left;
      }
      else
      {
          if(!cur->right)
              cur->right=new trie();
              cur=cur->right;
      }
    } 
}


  ll mxor(trie* root)
  {
      
      
      ll gmx=0;
     
      for(i=0;i<n;i++)
      {
           trie* temp=root;
          ll mx=0;
           val=br[i];
      for(j=31;j>=0;j--)
      {
          ll b=(val>>j)&1;
          if(b==0){
              
          if(temp->right)
          { temp=temp->right;    
          mx+=(1<<j);
         
          }
            else
            {
               temp=temp->left; 
            }
          }
          else
          {
              if(temp->left)
              {
                  temp=temp->left;
                  mx+=(1<<j);
              }
              else temp=temp->right;
              
          }
      }
      if(mx>gmx)
          gmx=mx;
  }
  return gmx;
  
  }



im
{
          
    scn(n);
    trie* root=new trie();
    rep(i,0,n)
    {scn(ar[i]);
       insert(root,ar[i]);
    }
    rep(i,0,n)
    scn(br[i]);
    cout<<mxor(root);
    
    
    
}
